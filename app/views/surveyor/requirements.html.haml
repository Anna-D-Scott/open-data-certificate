- content_for(:header) do
  / header overridden
- content_for(:main_container_class) {'non-container improvements'}
- resume_path = @response_set.complete? ? '#' : surveyor.edit_my_survey_path(survey_code: @response_set.survey.access_code, response_set_code: @response_set.access_code)

.affixed
  %header
    .container
      .row
        .span9
          %h1= t('improvements.heading')
          %h3= @response_set.title
        .span3
          -if @response_set.incomplete?
            =link_to t('improvements.return_to_questionnaire'), surveyor.continue_my_survey_path(:survey_code => @response_set.survey.access_code, :response_set_code => @response_set.access_code), :class => 'btn btn-primary btn-large return', :role => "button"
          -else
            =link_to t('improvements.return_to_dashboard'), dashboard_path, :class => 'btn btn-primary btn-large return', :role => "button"

- ['basic', 'pilot', 'standard', 'exemplar'].each do |level|

  - requirements = @requirements.select {|r| r.requirement_level == level}
  - fields = level == 'basic' ? @mandatory_fields : []

  - requirements.sort_by! {|requirement| requirement[:display_order]}
  - fields.sort_by!       {|field| field[:display_order]}

  - unless (requirements + fields).empty?

    %section{:class => "improvement improvement-#{level}"}

      %header
        .container
          %h2= t("improvements.levels.#{level}.title")
          %h3= t("improvements.levels.#{level}.subtitle")

      .requirements.container
        %p.instruction= t("improvements.levels.#{level}.instruction")
        %hr.heavy

        %ul
          -fields.each do |field|
            %li
              .dataset{class: defined?(expanded) ? 'expanded': ''}
                .requirement-title
                  %span= "#{field.text.html_safe}"
                .expand
                  %i.show-more.icon-chevron-down
                  %i.hide-more.icon-chevron-up
                .more
                  .row
                    .span4
                      %p= "Temporary text, make this dynamic! If your organisation didn't originally create or gather this data then you might not have the right to publish it. If youâ€™re unsure, check with the data owner because you will need their permission to publish it."
                    .span6.offset2
                      %a.btn.btn-primary.btn-large{:href => "#{resume_path}#q_#{field.id}"}
                        %strong= t('improvements.buttons.understood')
                        =t('improvements.buttons.understood_action')
                      %a.btn.btn-primary.btn-large.btn-negative{:href => "http://www.this-needs-linking.com"}
                        %strong= t('improvements.buttons.misunderstood')
                        =t('improvements.buttons.misunderstood_action')
              %hr.heavy

          -requirements.each do |requirement|
            %li
              .dataset{class: defined?(expanded) ? 'expanded': ''}
                .requirement-title
                  %span= requirement.text.html_safe
                .expand
                  %i.show-more.icon-chevron-down
                  %i.hide-more.icon-chevron-up
                .more
                  .row
                    .span4
                      %p= "Temporary text, make this dynamic! Formats like CSV, JSON, XML or Turtle use custom vocabularies or schemas which say what columns or properties the data contains."
                    .span6.offset2
                      %a.btn.btn-primary.btn-large{:href => "#{resume_path}#q_#{requirement.question_corresponding_to_requirement.try(:id) || requirement.answer_corresponding_to_requirement.try(:question).try(:id)}"}
                        %strong= t('improvements.buttons.understood')
                        =t('improvements.buttons.understood_action')
                      %a.btn.btn-primary.btn-large.btn-negative{:href => "http://www.this-needs-linking.com"}
                        %strong= t('improvements.buttons.misunderstood')
                        =t('improvements.buttons.misunderstood_action')
              %hr.heavy
              -#= link_to without_instruction(requirement.text).html_safe, "#{resume_path}#q_#{requirement.question_corresponding_to_requirement.try(:id) || requirement.answer_corresponding_to_requirement.try(:question).try(:id)}"
